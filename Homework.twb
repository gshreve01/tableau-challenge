<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0614.2338                               -->
<workbook original-version='18.1' source-build='2020.2.2 (20202.20.0614.2338)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='202006-citibike-tripdata.csv (Multiple Connections)' inline='true' name='federated.0gkr55v1ylsdjj1c44l4c0plnp0r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='202006-citibike-tripdata' name='textscan.17zwqhl023e7zt191hxza1syk964'>
            <connection class='textscan' directory='C:/Development/tableau-challenge/data' filename='202006-citibike-tripdata.csv' password='' server='' />
          </named-connection>
          <named-connection caption='202005-citibike-tripdata' name='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m'>
            <connection class='textscan' directory='C:/Development/tableau-challenge/data' filename='202005-citibike-tripdata.csv' password='' server='' />
          </named-connection>
          <named-connection caption='202004-citibike-tripdata' name='textscan.0m7vmcn0fxteni11mhovv1ihm46z'>
            <connection class='textscan' directory='C:/Development/tableau-challenge/data' filename='202004-citibike-tripdata.csv' password='' server='' />
          </named-connection>
          <named-connection caption='201906-citibike-tripdata' name='textscan.1ju2dom01z6ihs16rd9j10elka7u'>
            <connection class='textscan' directory='C:/Development/tableau-challenge/data' filename='201906-citibike-tripdata.csv' password='' server='' />
          </named-connection>
          <named-connection caption='201905-citibike-tripdata' name='textscan.16nebbh1xhznwz10xsym61q5fanf'>
            <connection class='textscan' directory='C:/Development/tableau-challenge/data' filename='201905-citibike-tripdata.csv' password='' server='' />
          </named-connection>
          <named-connection caption='201904-citibike-tripdata' name='textscan.0nij1ig0hvp59o10t8dsp0tthnli'>
            <connection class='textscan' directory='C:/Development/tableau-challenge/data' filename='201904-citibike-tripdata.csv' password='' server='' />
          </named-connection>
          <named-connection caption='202001-citibike-tripdata' name='textscan.1r6a56j1jg1e1t14r4mk317z0wyp'>
            <connection class='textscan' directory='C:/Development/tableau-challenge/data' filename='202001-citibike-tripdata.csv' password='' server='' />
          </named-connection>
          <named-connection caption='201901-citibike-tripdata' name='textscan.0gl5px401i4omn11iixj50zwex6j'>
            <connection class='textscan' directory='C:/Development/tableau-challenge/data' filename='201901-citibike-tripdata.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation all='true' name='201901-citibike-tripdata.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tripduration' />
            <column datatype='datetime' name='starttime' />
            <column datatype='datetime' name='stoptime' />
            <column datatype='integer' name='start station id' />
            <column datatype='string' name='start station name' />
            <column datatype='real' name='start station latitude' />
            <column datatype='real' name='start station longitude' />
            <column datatype='integer' name='end station id' />
            <column datatype='string' name='end station name' />
            <column datatype='real' name='end station latitude' />
            <column datatype='real' name='end station longitude' />
            <column datatype='integer' name='bikeid' />
            <column datatype='string' name='usertype' />
            <column datatype='integer' name='birth year' />
            <column datatype='integer' name='gender' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201901-citibike-tripdata.csv' table='[201901-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201902-citibike-tripdata.csv' table='[201902-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201903-citibike-tripdata.csv' table='[201903-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201904-citibike-tripdata.csv' table='[201904-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201905-citibike-tripdata.csv' table='[201905-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201906-citibike-tripdata.csv' table='[201906-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201907-citibike-tripdata.csv' table='[201907-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201908-citibike-tripdata.csv' table='[201908-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201909-citibike-tripdata.csv' table='[201909-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201910-citibike-tripdata.csv' table='[201910-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201911-citibike-tripdata.csv' table='[201911-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201912-citibike-tripdata.csv' table='[201912-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='202001-citibike-tripdata.csv' table='[202001-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='202002-citibike-tripdata.csv' table='[202002-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='202003-citibike-tripdata.csv' table='[202003-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='202004-citibike-tripdata.csv' table='[202004-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='202005-citibike-tripdata.csv' table='[202005-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='202006-citibike-tripdata.csv' table='[202006-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation all='true' name='201901-citibike-tripdata.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tripduration' />
            <column datatype='datetime' name='starttime' />
            <column datatype='datetime' name='stoptime' />
            <column datatype='integer' name='start station id' />
            <column datatype='string' name='start station name' />
            <column datatype='real' name='start station latitude' />
            <column datatype='real' name='start station longitude' />
            <column datatype='integer' name='end station id' />
            <column datatype='string' name='end station name' />
            <column datatype='real' name='end station latitude' />
            <column datatype='real' name='end station longitude' />
            <column datatype='integer' name='bikeid' />
            <column datatype='string' name='usertype' />
            <column datatype='integer' name='birth year' />
            <column datatype='integer' name='gender' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201901-citibike-tripdata.csv' table='[201901-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201902-citibike-tripdata.csv' table='[201902-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201903-citibike-tripdata.csv' table='[201903-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201904-citibike-tripdata.csv' table='[201904-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201905-citibike-tripdata.csv' table='[201905-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201906-citibike-tripdata.csv' table='[201906-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201907-citibike-tripdata.csv' table='[201907-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201908-citibike-tripdata.csv' table='[201908-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201909-citibike-tripdata.csv' table='[201909-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201910-citibike-tripdata.csv' table='[201910-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201911-citibike-tripdata.csv' table='[201911-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201912-citibike-tripdata.csv' table='[201912-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='202001-citibike-tripdata.csv' table='[202001-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='202002-citibike-tripdata.csv' table='[202002-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='202003-citibike-tripdata.csv' table='[202003-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='202004-citibike-tripdata.csv' table='[202004-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='202005-citibike-tripdata.csv' table='[202005-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='202006-citibike-tripdata.csv' table='[202006-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[201901-citibike-tripdata.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[201901-citibike-tripdata.csv+]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Union_AC7368BB656A4EC8933B3CCB592CBE23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime]</local-name>
            <parent-name>[201901-citibike-tripdata.csv+]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Union_AC7368BB656A4EC8933B3CCB592CBE23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime]</local-name>
            <parent-name>[201901-citibike-tripdata.csv+]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Union_AC7368BB656A4EC8933B3CCB592CBE23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start station id]</local-name>
            <parent-name>[201901-citibike-tripdata.csv+]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Union_AC7368BB656A4EC8933B3CCB592CBE23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name]</local-name>
            <parent-name>[201901-citibike-tripdata.csv+]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Union_AC7368BB656A4EC8933B3CCB592CBE23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude]</local-name>
            <parent-name>[201901-citibike-tripdata.csv+]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Union_AC7368BB656A4EC8933B3CCB592CBE23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude]</local-name>
            <parent-name>[201901-citibike-tripdata.csv+]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Union_AC7368BB656A4EC8933B3CCB592CBE23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[end station id]</local-name>
            <parent-name>[201901-citibike-tripdata.csv+]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Union_AC7368BB656A4EC8933B3CCB592CBE23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name]</local-name>
            <parent-name>[201901-citibike-tripdata.csv+]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Union_AC7368BB656A4EC8933B3CCB592CBE23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude]</local-name>
            <parent-name>[201901-citibike-tripdata.csv+]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Union_AC7368BB656A4EC8933B3CCB592CBE23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude]</local-name>
            <parent-name>[201901-citibike-tripdata.csv+]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Union_AC7368BB656A4EC8933B3CCB592CBE23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid]</local-name>
            <parent-name>[201901-citibike-tripdata.csv+]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Union_AC7368BB656A4EC8933B3CCB592CBE23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype]</local-name>
            <parent-name>[201901-citibike-tripdata.csv+]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Union_AC7368BB656A4EC8933B3CCB592CBE23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[birth year]</local-name>
            <parent-name>[201901-citibike-tripdata.csv+]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Union_AC7368BB656A4EC8933B3CCB592CBE23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[201901-citibike-tripdata.csv+]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Union_AC7368BB656A4EC8933B3CCB592CBE23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[201901-citibike-tripdata.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Union_AC7368BB656A4EC8933B3CCB592CBE23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='StartStationNameOccuranceCount' datatype='integer' name='[Calculation_1408219317975777280]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [start station name] : SUM(1) }' />
      </column>
      <column caption='Favorite Start Location' datatype='integer' name='[Calculation_1408219317981032450]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED : MAX ( [Calculation_1408219317975777280] ) }' />
      </column>
      <column caption='Subscriber Count' datatype='integer' name='[Calculation_690739595973722114]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [stoptime], [usertype] : sum(&#13;&#10;if [usertype] = &apos;Subscriber&apos; then 1 else 0 end ) }' />
      </column>
      <column caption='Subscriber Percentage of Ridership' datatype='real' default-format='p0.00%' name='[Calculation_690739595985637380]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Calculation_690739595973722114]) / COUNT([__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23])' />
      </column>
      <column caption='EndStationNameOccuranceCount' datatype='integer' name='[StartStationNameOccuranceCount (copy)_1408219317985579012]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [end station name] : SUM(1) }' />
      </column>
      <column caption='Short Term Count' datatype='integer' name='[Subscriber Count (copy)_690739595986915333]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [stoptime], [usertype] : sum(&#13;&#10;if [usertype] = &apos;Customer&apos; then 1 else 0 end ) }' />
      </column>
      <column caption='Short Term Percentage of Ridership' datatype='real' default-format='p0.00%' name='[Subscriber Percentage of Ridership (copy)_690739595988238342]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Subscriber Count (copy)_690739595986915333]) / COUNT([__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='201901-citibike-tripdata.csv+' datatype='table' name='[__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[end station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[end station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[start station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[start station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='string' name='[start station name]' role='dimension' type='nominal' />
      <column datatype='string' name='[usertype]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Customer&quot;' value='Short Term' />
        </aliases>
      </column>
      <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_690739595985637380]' derivation='User' name='[usr:Calculation_690739595985637380:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Subscriber Percentage of Ridership (copy)_690739595988238342]' derivation='User' name='[usr:Subscriber Percentage of Ridership (copy)_690739595988238342:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:start station name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;24 Ave &amp; 26 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;3 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;31 St &amp; Newtown Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;44 Dr &amp; 21 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;6 Ave &amp; 12 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Allen St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Calyer St &amp; Jewel St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Ave &amp; Covert St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cherry St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Columbia St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dean St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Driggs Ave &amp; N 9 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 102 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 134 St &amp; Walnut Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 58 St &amp; 1 Ave (NE Corner)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 81 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eldert St &amp; Bushwick Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Front St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Halsey St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Humboldt St &amp; Varet St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kent St &amp; McGuinness Blvd&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lenox Ave &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lexington Ave &amp; E 128 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madison St &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mt Morris Park W &amp; W 120 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nostrand Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Railroad Ave &amp; Kay Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;S 4 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sterling Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Union St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 148 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 15 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 52 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 90 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West End Ave &amp; W 107 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Willow Ave &amp; E 133 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;19 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;3 Ave &amp; Carroll St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;31 Ave &amp; 30 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;36 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5 Ave &amp; E 93 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Avenue C &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Berkeley Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; W 25 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bushwick Ave &amp; Harman St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carroll St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Park West &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Crescent St &amp; 30 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ditmars Blvd &amp; 19 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 118 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 149 St &amp; Eagle Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 24 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 51 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 6 St &amp; Avenue D&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 72 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 91 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Franklin Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greene Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jay St &amp; York St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lafayette Ave &amp; St James Pl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lewis Ave &amp; Madison St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Macon St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Melrose St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morgan Ave &amp; Lombardy St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nassau Ave &amp; Newell St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pershing Square North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prospect Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stanhope St &amp; Fairview Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tompkins Ave &amp; Hopkins St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vernon Blvd &amp; 50 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 116 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 45 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 74 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Willoughby Ave &amp; Hall St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;21 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3 Ave &amp; E 100 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;31 St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;39 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;5 Ave &amp; W 131 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adelphi St &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Baltic St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boerum St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broadway &amp; W 38 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bushwick Ave &amp; Stagg St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cedar St &amp; Evergreen Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Park West &amp; W 102 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Columbia Heights &amp; Cranberry St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Crescent St &amp; Ditmars Blvd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dock 72 Way &amp; Market St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 10 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 128 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 30 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 76 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 97 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Pkwy &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 112 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Graham Ave &amp; Conselyea St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greenwich St &amp; W Houston St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hope St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Johnson St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lexington Ave &amp; E 36 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madison St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Menahan St &amp; Wyckoff Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morris Ave &amp; E 142 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Newtown Ave &amp; 23 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prospect Park West &amp; 8 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Putnam Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rogers Ave &amp; Sterling St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spruce St &amp; Nassau St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;State St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Union Ave &amp; N 12 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 135 St &amp; Lenox Terrace Pl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 27 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 84 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Willoughby Ave &amp; Walworth St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2 Ave &amp; 36 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;27 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;34 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;4 Ave &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;47 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;6 Ave &amp; W 34 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Amsterdam Ave &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Beaver St &amp; Fayette St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway &amp; Whipple St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carlton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Ave &amp; Melrose St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clermont Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Columbus Ave &amp; W 103 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Degraw St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dwight St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 106 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 138 St &amp; Cypress Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 43 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 59 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 84 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fairview Ave &amp; Linden St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Frost St &amp; Debevoise Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand St &amp; Elizabeth St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hanson Pl &amp; Ashland Pl&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Irving Ave &amp; DeKalb Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Knickerbocker Ave &amp; George St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lenox Ave &amp; W 133 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lincoln Pl &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Manhattan Av &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Milton St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Myrtle Ave &amp; Lewis Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pacific St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pitt St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Riverside Blvd &amp; W 67 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Schermerhorn St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St Nicholas Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stuyvesant Walk &amp; 1 Av Loop&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Van Brunt St &amp; Wolcott St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 100 St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 38 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 55 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wales Ave &amp; E 147 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Westchester Ave &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wolcott St &amp; Dwight St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1 Ave &amp; E 94 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;24 Ave &amp; 29 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3 St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;31 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;44 Dr &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;6 Ave &amp; Broome St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Amsterdam Ave &amp; W 66 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; 12 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; W 56 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambridge Pl &amp; Gates Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Ave &amp; Decatur St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Columbia St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dean St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Driggs Ave &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 103 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 12 St &amp; Ave C&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 135 St &amp; St Ann&apos;s Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 39 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 58 St &amp;  1 Ave (NW Corner)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 81 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Front St &amp; Jay St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grand Army Plaza &amp; Plaza St West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hamilton Pl &amp; W 140 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huron St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kingsland Ave &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lenox Ave &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madison St &amp; Seneca Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Metropolitan Ave &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Murray St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Old Fulton St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;S 5 Pl &amp; S 5 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St Marks Pl &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sterling St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;University Pl &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 15 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 169 St &amp; Fort Washington Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 35 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 92 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wilson Ave &amp; Moffat St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1 Ave &amp; E 44 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;21 St &amp; Hoyt Ave S&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3 Ave &amp; E 112 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;31 St &amp; Astoria Blvd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;40 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;5 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;9 St &amp; 44 Rd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Albany Ave &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bond St &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Butler St &amp; Court St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cedar St &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Columbia St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cumberland St &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Douglass St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 128 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 31 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 55 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 77 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 97 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eastern Pkwy &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Graham Ave &amp; Grand St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grove St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Howard St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kane St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lexington Ave &amp; E 111 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madison St &amp; Cypress Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morris Ave &amp; E 153 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pershing Square South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Putnam Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Roosevelt Island Tramway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St James Pl &amp; Oliver St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Steinway St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Union Ave &amp; Wallabout St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 13 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 144 St &amp; Adam Clayton Powell Blvd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 30 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 87 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;West Drive &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Willoughby Ave &amp; Wyckoff Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;14 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2 Ave &amp; E 122 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;30 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;35 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 118 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Atlantic Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bergen St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; Moylan Pl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bushwick Ave &amp; Forrest St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carroll St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Park W &amp; W 96 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clinton St &amp; 4 Place&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Court St &amp; Nelson St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Devoe St &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 116 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 144 St &amp; Brook Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 20 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 5 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 68 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 89 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Forsyth St &amp; Canal St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fulton St &amp; Utica Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greene Ave &amp; Grandview Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Henry St &amp; Bay St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jackson St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lafayette Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lewis Ave &amp; Decatur St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;McKibbin St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montgomery St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;N 12 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Park Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Propsect Ave &amp; E 151 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Riverside Dr &amp; W 138 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smith St &amp; 9 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stagg St &amp; Morgan Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suydam St &amp; St. Nicholas Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vernon Blvd &amp; 41 Rd&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 113 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 67 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Willis Ave &amp; E 141 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1 Ave &amp; E 5 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;21 St &amp; 31 Dr&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;31 Ave &amp; 34 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;37 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5 Ave &amp; E 103 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;9 Ave &amp; W 18 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 130 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Berkeley Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bushwick Ave &amp; Linden St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carroll St &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Park West &amp; W 76 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clinton St &amp; Joralemon St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crescent St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Division Ave &amp; Hooper St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 118 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 149 St &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 25 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 51 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 72 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 91 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Franklin Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gansevoort St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenpoint Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Henry St &amp; Middagh St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jefferson Ave &amp; Evergreen Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lexington Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madison Ave &amp; E 82 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Menahan St &amp; Central Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morgan Ave &amp; Maspeth Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nassau Ave &amp; Russell St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pearl St &amp; Peck Slip&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prospect Pl &amp; Underhill Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rivington St &amp; Ridge St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stanton St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Underhill Ave &amp; Lincoln Pl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Verona Pl &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 120 St &amp; Claremont Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 25 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 76 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Willoughby Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;12 Ave &amp; W 125 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2 Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;28 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;35 Ave &amp; 37 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;49 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5 Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;7 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Amsterdam Ave &amp; W 136 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bedford Ave &amp; S 9 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; Kosciuszko St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carroll St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clinton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Convent Ave &amp; W 135 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 115 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 141 St &amp; St Ann&apos;s Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 2 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 66 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 88 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Forest Ave &amp; Summerfield St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fulton St &amp; Clermont Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Green St &amp; McGuinness Blvd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hart St &amp; Wyckoff Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Irving Ave &amp; Palmetto St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosciuszko St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Leonard St &amp; Maujer St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lorimer St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;McGuinness Blvd &amp; Eagle St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monroe St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;N 6 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Park Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Powers St &amp; Olive St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Riverside Dr &amp; W 91 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sigourney St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Nicholas Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suydam St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vernon Blvd &amp; 30 Rd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 107 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 63 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Washington Ave &amp; Greene Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Willis Ave &amp; Bruckner Blvd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wyckoff St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;10 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;21 St &amp; Queens Plaza North&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3 Ave &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;31 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;40 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;5 St &amp; 51 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allen St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bond St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Broadway &amp; W 49 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cadman Plaza E &amp; Johnson St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Center Blvd &amp; 48 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Centre St &amp; Seneca Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbia St &amp; Kane St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cypress Ave &amp; George St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Douglass St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 11 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 132 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 56 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 78 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 98 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Edgecombe Ave &amp; W 141 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Graham Ave &amp; Herbert St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Halsey St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hoyt St &amp; Warren St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kent Ave &amp; N 7 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lefferts Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lexington Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madison St &amp; Evergreen Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Motorgate&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norman St &amp; Wyckoff Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Putnam Ave &amp; Wyckoff Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St James Pl &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Steinway St &amp; 28 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Union St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 145 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 31 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 50 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 87 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West End Ave &amp; W 78 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Willoughby St &amp; Ashland Pl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;11 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2 Ave &amp; E 31 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;27 St &amp; Hunter St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;34 Ave &amp; 38 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;47 Ave &amp; Skillman Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5 Av &amp; W 139 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;6 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Amsterdam Ave &amp; W 119 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bedford Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brook Ave &amp; E 138 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carlton Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Ave &amp; Starr Street&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clermont Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Commerce St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DeKalb Ave &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 109 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 138 St &amp; Grand Concourse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 43 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 60 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 84 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Frost St &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Harman St &amp; Seneca Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Irving Ave &amp; Halsey St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Knickerbocker Ave &amp; Halsey St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lenox Ave &amp; W 144 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Linden St &amp; Knickerbocker Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marcus Garvey Blvd &amp; Macon St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moffat St &amp; Bushwick&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Myrtle Ave &amp; Linden St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pacific St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Plaza St West &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Riverside Dr &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Schermerhorn St &amp; Court St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St Nicholas Ave &amp; W 137 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Van Buren St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 104 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 18 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 40 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 56 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wall St &amp; South St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;White St &amp; Johnson Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Woodward Ave &amp; Harman St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;11 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;28 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;34 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;48 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5 Ave &amp; 3 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;7 Ave &amp; Central Park South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Amsterdam Ave &amp; W 125 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford Ave &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broadway &amp; Furman Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brook Ave &amp; E 141 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Ave &amp; Weirfield St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Concord St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DeKalb Ave &amp; Hudson Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 110 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 138 St &amp; Willow Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 2 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 45 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 63 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 85 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Flushing Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fulton St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harrison Pl &amp; Porter Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving Ave &amp; Harman St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Knickerbocker Ave &amp; Hancock St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Leonard St &amp; Boerum St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marcy Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myrtle Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Park Ave &amp; E 124 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pleasant Ave &amp; E 116 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Riverside Dr &amp; W 78 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scholes St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St. Ann&apos;s Av &amp; Bruckner Blvd&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sullivan Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Van Sinderen Ave &amp; Truxton St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 106 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 59 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Walnut Ave &amp; E 136 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;White St &amp; Moore St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wyckoff Av &amp; Jefferson St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;12 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2 Ave &amp; E 104 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;28 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;35 St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5 Ave &amp; E 73 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;7 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Astoria Park S &amp; Shore Blvd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bergen St &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; Madison St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bushwick Ave &amp; Dekalb Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carroll St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cooper Square &amp; Astor Pl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Delancey St &amp; Eldridge St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 115 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 142 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 20 St &amp; FDR Drive&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 67 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 88 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Forsyth St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fulton St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greene Av &amp; Myrtle Av&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jackson Ave &amp; 46 Rd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kosciuszko St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Leonard St &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lorimer St &amp; Calyer St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;McKibbin St &amp; Bogart St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montague St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;N 11 St &amp; Kent Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Park Pl &amp; Church St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;President St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Riverside Dr &amp; W 104 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Smith St &amp; 3 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Nicholas Terrace &amp; Convent Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suydam St &amp; Knickerbocker Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vernon Blvd &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 110 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 42 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 64 St &amp; Thelonious Monk Circle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washington Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Willis Ave &amp; E 137 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;14 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;2 Ave &amp; E 125 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;3 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;31 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;36 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5 Ave &amp; E 88 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bergen St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; Roebling St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bushwick Ave &amp; Furman Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carroll St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Park West &amp; W 68 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clinton St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Court St &amp; State St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Devoe St &amp; Morgan Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 118 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 147 St &amp; Bergen Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 48 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 68 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 89 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Franklin Ave &amp; Empire Blvd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fulton St &amp; Waverly Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greene Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Henry St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jay St &amp; Tech Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lafayette Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lewis Ave &amp; Kosciuszko St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Melrose Ave &amp; E 150 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montrose Ave &amp; Bushwick Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;N 15 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Park Pl &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Riverside Dr &amp; W 145 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Somers St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stagg St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Throop Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vernon Blvd &amp; 47 Rd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 116 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 70 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Willis Ave &amp; E 143 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1 Ave &amp; E 110 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;24 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3 St &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;31 St &amp; Thomson Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;45 Rd &amp; 11 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Amsterdam Ave &amp; W 73 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; W 60 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clark St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Columbus Ave &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dean St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Duane St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 106 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 13 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 138 St &amp; 5 Av&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 39 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 81 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Engert Ave &amp; McGuinness Blvd&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Front St &amp; Maiden Ln&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grand Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hancock St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kingston Ave &amp; Herkimer St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lenox Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lincoln Ave &amp; E 134 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madison St &amp; Woodward Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Metropolitan Ave &amp; Stewart Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Onderdonk Ave &amp; Dekalb Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pioneer St &amp; Richards St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richards St &amp; Delavan St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S Portland Ave &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St Mary&apos;s St &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stewart Ave &amp; Johnson Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 95 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W Broadway &amp; Spring St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;West St &amp; Liberty St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wilson Ave &amp; Troutman St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1 Ave &amp; E 68 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;10 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;23 Ave &amp; 27 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;31 St &amp; Hoyt Ave N&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;43 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Banker St &amp; Meserole Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bradhurst Ave &amp; W 148 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cadman Plaza E &amp; Red Cross Pl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Center Blvd &amp; 51 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbia St &amp; Lorraine St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cypress Ave &amp; Palmetto St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Driggs Ave &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 102 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 11 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 133 St &amp; Cypress Pl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 33 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 56 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 81 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Edgecombe Ave &amp; W 145 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 129 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Graham Ave &amp; Withers St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Halsey St &amp; Evergreen Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kent Ave &amp; S 11 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lenox Ave &amp; W 111 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lexington Ave &amp; E 127 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madison St &amp; Forest Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Meserole Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Moore St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pierrepont St &amp; Monroe Pl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Queens Plaza North &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;S 4 St &amp; Rodney St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St Johns Pl &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stephen St &amp; Seneca Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Union St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 146 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 15 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 33 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 89 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;West End Ave &amp; W 94 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Willoughby St &amp; Fleet St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1 Ave &amp; E 16 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;21 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3 Ave &amp; E 71 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;31 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;37 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5 Ave &amp; E 126 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 132 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Avenue D &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Berry St &amp; N 8 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bushwick Ave &amp; McKibbin St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cathedral Pkwy &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Park West &amp; W 85 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clinton St &amp; Union St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crescent St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Division Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 118 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 149 St &amp; Morris Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 74 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 93 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Franklin St &amp; Dupont St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garfield Pl &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenwich Ave &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Henry St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jefferson St &amp; Cypress Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lexington Ave &amp; E 26 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madison Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Menahan St &amp; Onderdonk Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morningside Ave &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nassau St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rockaway Ave &amp; Bainbridge St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Southern Blvd &amp; E 142 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Underhill Ave &amp; Pacific St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 129 St &amp; Convent Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 26 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 82 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Water - Whitehall Plaza&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Willoughby Ave &amp; Onderdonk Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2 Ave &amp; E 96 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;28 Ave &amp; 44 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;35 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;48 Ave &amp; 30 Pl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5 Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;7 Ave &amp; Park Pl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Amsterdam Ave &amp; W 131 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bedford Ave &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadway &amp; Hancock St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brooklyn Bridge Park - Pier 2&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carroll St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Ave &amp; Woodbine St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cliff St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congress St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DeKalb Ave &amp; S Portland Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 114 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 141 St &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 19 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 2 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 65 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 85 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Flushing Ave &amp; Woodward Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fulton St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Jones St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Harrison St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Irving Ave &amp; Jefferson St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Knickerbocker Ave &amp; Thames St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Monroe St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Myrtle Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Park Ave &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pleasant Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Riverside Dr &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sharon St &amp; Olive St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St. Ann&apos;s Ave &amp; E 144 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vernon Blvd &amp; 10 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 106 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 20 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 42 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 59 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Warren St &amp; Court St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wyckoff Av &amp; Stanhope St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1 Pl &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;27 Ave &amp; 3 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;34 Ave &amp; 13 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;4 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;46 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amsterdam Ave &amp; W 79 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayard St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; W 122 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carlton Ave &amp; Dean St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Ave &amp; Himrod St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Classon Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Columbus Ave &amp; W 95 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Degraw St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Duffield St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 106 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 138 St &amp; Canal St W&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 41 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 58 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 82 St &amp; East End Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Evergreen Ave &amp; Noll St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Front St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Concourse &amp; E 144 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hancock St &amp; Wyckoff Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India St &amp; West St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Knickerbocker Ave &amp; Cooper St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lenox Ave &amp; W 130 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lincoln Ave &amp; E 138 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Metropolitan Ave &amp; Vandervoort Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myrtle Ave &amp; Grove St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Onderdonk Ave &amp; Gates Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pioneer St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Richardson St &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sands St Gate&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St Nicholas Ave &amp; E 134 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stockholm St &amp; Wilson Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Van Brunt St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 100 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 17 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 54 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W Broadway &amp; W Houston St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;West Thames St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Withers St &amp; Kingsland Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1 Ave &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;21 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;31 Ave &amp; Steinway St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;38 Ave &amp; 29 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;5 Ave &amp; E 135 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;9 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 141 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Avenue D &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bialystoker Pl &amp; Delancey St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bushwick Ave &amp; Powers St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Park West &amp; W 100 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coffey St &amp; Conover St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Crescent St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 123 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 53 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 75 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 95 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East End Ave &amp; E 86 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;George St &amp; Wilson Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lexington Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madison Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Menahan St &amp; Seneca Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morningside Dr &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Newton Rd &amp; 44 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Perry St &amp; Greenwich Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Putnam Ave &amp; Knickerbocker Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Roebling St &amp; N 4 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Southpoint Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stanton St &amp; Norfolk St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Union Ave &amp; Jackson St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 133 St &amp; 12 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 26 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 4 St &amp; 7 Ave S&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 47 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 84 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Waterbury St &amp; Stagg St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Willoughby Ave &amp; Tompkins Ave&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[usr:Subscriber Percentage of Ridership (copy)_690739595988238342:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0gkr55v1ylsdjj1c44l4c0plnp0r]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[usr:Calculation_690739595985637380:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='201901-citibike-tripdata.csv+' id='Union_AC7368BB656A4EC8933B3CCB592CBE23'>
            <properties context=''>
              <relation all='true' name='201901-citibike-tripdata.csv+' type='union'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='tripduration' />
                  <column datatype='datetime' name='starttime' />
                  <column datatype='datetime' name='stoptime' />
                  <column datatype='integer' name='start station id' />
                  <column datatype='string' name='start station name' />
                  <column datatype='real' name='start station latitude' />
                  <column datatype='real' name='start station longitude' />
                  <column datatype='integer' name='end station id' />
                  <column datatype='string' name='end station name' />
                  <column datatype='real' name='end station latitude' />
                  <column datatype='real' name='end station longitude' />
                  <column datatype='integer' name='bikeid' />
                  <column datatype='string' name='usertype' />
                  <column datatype='integer' name='birth year' />
                  <column datatype='integer' name='gender' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201901-citibike-tripdata.csv' table='[201901-citibike-tripdata#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201902-citibike-tripdata.csv' table='[201902-citibike-tripdata#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201903-citibike-tripdata.csv' table='[201903-citibike-tripdata#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201904-citibike-tripdata.csv' table='[201904-citibike-tripdata#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201905-citibike-tripdata.csv' table='[201905-citibike-tripdata#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201906-citibike-tripdata.csv' table='[201906-citibike-tripdata#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201907-citibike-tripdata.csv' table='[201907-citibike-tripdata#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201908-citibike-tripdata.csv' table='[201908-citibike-tripdata#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201909-citibike-tripdata.csv' table='[201909-citibike-tripdata#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201910-citibike-tripdata.csv' table='[201910-citibike-tripdata#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201911-citibike-tripdata.csv' table='[201911-citibike-tripdata#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='201912-citibike-tripdata.csv' table='[201912-citibike-tripdata#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='202001-citibike-tripdata.csv' table='[202001-citibike-tripdata#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='202002-citibike-tripdata.csv' table='[202002-citibike-tripdata#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='202003-citibike-tripdata.csv' table='[202003-citibike-tripdata#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='202004-citibike-tripdata.csv' table='[202004-citibike-tripdata#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='202005-citibike-tripdata.csv' table='[202005-citibike-tripdata#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='textscan.1h6sgaw1v4dsxk12r5ylf0exaf3m' name='202006-citibike-tripdata.csv' table='[202006-citibike-tripdata#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='tripduration' ordinal='0' />
                    <column datatype='datetime' name='starttime' ordinal='1' />
                    <column datatype='datetime' name='stoptime' ordinal='2' />
                    <column datatype='integer' name='start station id' ordinal='3' />
                    <column datatype='string' name='start station name' ordinal='4' />
                    <column datatype='real' name='start station latitude' ordinal='5' />
                    <column datatype='real' name='start station longitude' ordinal='6' />
                    <column datatype='integer' name='end station id' ordinal='7' />
                    <column datatype='string' name='end station name' ordinal='8' />
                    <column datatype='real' name='end station latitude' ordinal='9' />
                    <column datatype='real' name='end station longitude' ordinal='10' />
                    <column datatype='integer' name='bikeid' ordinal='11' />
                    <column datatype='string' name='usertype' ordinal='12' />
                    <column datatype='integer' name='birth year' ordinal='13' />
                    <column datatype='integer' name='gender' ordinal='14' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Annotate: More Subscribers In Total (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='202006-citibike-tripdata.csv (Multiple Connections)' name='federated.0gkr55v1ylsdjj1c44l4c0plnp0r' />
          </datasources>
          <datasource-dependencies datasource='federated.0gkr55v1ylsdjj1c44l4c0plnp0r'>
            <_.fcp.ObjectModelTableType.true...column caption='201901-citibike-tripdata.csv+' datatype='table' name='[__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]' pivot='key' type='quantitative' />
            <column-instance column='[stoptime]' derivation='MY' name='[my:stoptime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[usertype]' derivation='None' name='[none:usertype:nk]' pivot='key' type='nominal' />
            <column datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
            <column-instance column='[stoptime]' derivation='Month-Trunc' name='[tmn:stoptime:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[usertype]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Customer&quot;' value='Short Term' />
              </aliases>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='201901-citibike-tripdata.csv+' datatype='integer' name='[__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:stoptime:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[my:stoptime:ok]' member='202001' />
              <groupfilter function='member' level='[my:stoptime:ok]' member='202002' />
              <groupfilter function='member' level='[my:stoptime:ok]' member='202003' />
              <groupfilter function='member' level='[my:stoptime:ok]' member='202004' />
              <groupfilter function='member' level='[my:stoptime:ok]' member='202005' />
              <groupfilter function='member' level='[my:stoptime:ok]' member='202006' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:stoptime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[tmn:stoptime:qk]' scope='cols' value='Ridership Month' />
            <format attr='title' class='0' field='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]' scope='rows' value='Number of Rides Per Month' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:usertype:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[tmn:stoptime:qk]' enable-instant-analytics='true' formula='min' id='refline0' label-type='automatic' scope='per-pane' value-column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[tmn:stoptime:qk]' z-order='1' />
            <reference-line axis-column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]</rows>
        <cols>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[tmn:stoptime:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Low Point of Subscribers:</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'><![CDATA[<[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[tmn:stoptime:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]</field>
                      <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:usertype:nk]</field>
                      <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[tmn:stoptime:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>516483</value>
                    <value>&quot;Subscriber&quot;</value>
                    <value>#2020-04-01 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{D695C542-E859-4145-A524-FE6B326CBA4B}' />
    </worksheet>
    <worksheet name='Annotate: Short-Term Users as a Percentage Has Grown (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='202006-citibike-tripdata.csv (Multiple Connections)' name='federated.0gkr55v1ylsdjj1c44l4c0plnp0r' />
          </datasources>
          <datasource-dependencies datasource='federated.0gkr55v1ylsdjj1c44l4c0plnp0r'>
            <column caption='Subscriber Count' datatype='integer' name='[Calculation_690739595973722114]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [stoptime], [usertype] : sum(&#13;&#10;if [usertype] = &apos;Subscriber&apos; then 1 else 0 end ) }' />
            </column>
            <column caption='Subscriber Percentage of Ridership' datatype='real' default-format='p0.00%' name='[Calculation_690739595985637380]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_690739595973722114]) / COUNT([__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23])' />
            </column>
            <column caption='Short Term Count' datatype='integer' name='[Subscriber Count (copy)_690739595986915333]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [stoptime], [usertype] : sum(&#13;&#10;if [usertype] = &apos;Customer&apos; then 1 else 0 end ) }' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='201901-citibike-tripdata.csv+' datatype='integer' name='[__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23]' role='measure' type='quantitative' />
            <column caption='Short Term Percentage of Ridership' datatype='real' default-format='p0.00%' name='[Subscriber Percentage of Ridership (copy)_690739595988238342]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Subscriber Count (copy)_690739595986915333]) / COUNT([__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23])' />
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='201901-citibike-tripdata.csv+' datatype='table' name='[__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23]' role='measure' type='quantitative' />
            <column-instance column='[stoptime]' derivation='MY' name='[my:stoptime:ok]' pivot='key' type='ordinal' />
            <column datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
            <column-instance column='[stoptime]' derivation='Month-Trunc' name='[tmn:stoptime:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[usertype]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Customer&quot;' value='Short Term' />
              </aliases>
            </column>
            <column-instance column='[Calculation_690739595985637380]' derivation='User' name='[usr:Calculation_690739595985637380:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Subscriber Percentage of Ridership (copy)_690739595988238342]' derivation='User' name='[usr:Subscriber Percentage of Ridership (copy)_690739595988238342:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:stoptime:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[my:stoptime:ok]' member='202001' />
              <groupfilter function='member' level='[my:stoptime:ok]' member='202002' />
              <groupfilter function='member' level='[my:stoptime:ok]' member='202003' />
              <groupfilter function='member' level='[my:stoptime:ok]' member='202004' />
              <groupfilter function='member' level='[my:stoptime:ok]' member='202005' />
              <groupfilter function='member' level='[my:stoptime:ok]' member='202006' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:stoptime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[usr:Subscriber Percentage of Ridership (copy)_690739595988238342:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_0' value='#efebe82d' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[usr:Calculation_690739595985637380:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[usr:Subscriber Percentage of Ridership (copy)_690739595988238342:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[usr:Calculation_690739595985637380:qk] + [federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[usr:Subscriber Percentage of Ridership (copy)_690739595988238342:qk])</rows>
        <cols>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[tmn:stoptime:qk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Even though a spike in ridership occured for subscribers, its overall percentage still dropped in same time period</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-04-03 00:00:51.174#'>
                  <node-reference>
                    <axis>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[tmn:stoptime:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.73472437830176396'>
                  <node-reference>
                    <axis>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[usr:Calculation_690739595985637380:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-05-01 13:19:10.720#'>
                  <node-reference>
                    <axis>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[tmn:stoptime:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.25165756264666717'>
                  <node-reference>
                    <axis>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[usr:Calculation_690739595985637380:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{DFD3A73E-EC00-443C-A0D4-931BA6454E49}' />
    </worksheet>
    <worksheet name='Annotated: Total Rids Have Surged Since April'>
      <table>
        <view>
          <datasources>
            <datasource caption='202006-citibike-tripdata.csv (Multiple Connections)' name='federated.0gkr55v1ylsdjj1c44l4c0plnp0r' />
          </datasources>
          <datasource-dependencies datasource='federated.0gkr55v1ylsdjj1c44l4c0plnp0r'>
            <_.fcp.ObjectModelTableType.true...column caption='201901-citibike-tripdata.csv+' datatype='table' name='[__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23]' derivation='Count' name='[__tableau_internal_object_id__].[pcdf:cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[stoptime]' derivation='MY' name='[my:stoptime:ok]' pivot='key' type='ordinal' />
            <column datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
            <column-instance column='[stoptime]' derivation='Month-Trunc' name='[tmn:stoptime:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='201901-citibike-tripdata.csv+' datatype='integer' name='[__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:stoptime:ok]'>
            <groupfilter from='201906' function='range' level='[my:stoptime:ok]' to='202006' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:stoptime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[tmn:stoptime:qk]' scope='cols' value='Ridership Month' />
            <format attr='title' class='0' field='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[pcto:cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]' scope='rows' value='% of Ridership for Month of Total Ridership for Year' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[pcto:cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='rounding' id='annotation_0' value='large' />
            <format attr='fill-color' id='annotation_0' value='#fafafaa0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]' />
              <text column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[pcdf:cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[pcto:cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]</rows>
        <cols>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[tmn:stoptime:qk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Correlates to the uptick in both short time and subscriber use</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-04-01 08:57:09.064#'>
                  <node-reference>
                    <axis>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[tmn:stoptime:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.070042387064631298'>
                  <node-reference>
                    <axis>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[pcto:cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-05-07 13:52:24.172#'>
                  <node-reference>
                    <axis>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[tmn:stoptime:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.032686447296827938'>
                  <node-reference>
                    <axis>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[pcto:cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{AA8D8267-83DE-4EBD-9A6F-D529802746AF}' />
    </worksheet>
    <worksheet name='City Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='202006-citibike-tripdata.csv (Multiple Connections)' name='federated.0gkr55v1ylsdjj1c44l4c0plnp0r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0gkr55v1ylsdjj1c44l4c0plnp0r'>
            <column caption='StartStationNameOccuranceCount' datatype='integer' name='[Calculation_1408219317975777280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [start station name] : SUM(1) }' />
            </column>
            <column caption='EndStationNameOccuranceCount' datatype='integer' name='[StartStationNameOccuranceCount (copy)_1408219317985579012]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [end station name] : SUM(1) }' />
            </column>
            <column aggregation='Avg' datatype='real' name='[end station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[end station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[starttime]' derivation='MY' name='[my:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[end station latitude]' derivation='None' name='[none:end station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station longitude]' derivation='None' name='[none:end station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[start station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[start station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1408219317975777280]' derivation='Sum' name='[sum:Calculation_1408219317975777280:qk]' pivot='key' type='quantitative' />
            <column-instance column='[StartStationNameOccuranceCount (copy)_1408219317985579012]' derivation='Sum' name='[sum:StartStationNameOccuranceCount (copy)_1408219317985579012:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:starttime:ok]'>
            <groupfilter function='member' level='[my:starttime:ok]' member='202006' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:start station longitude:qk]' field-type='quantitative' max='-8208663.3194996072' min='-8245422.7018096521' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:start station latitude:qk]' field-type='quantitative' max='4990995.2913710577' min='4968927.8602214446' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Zip Code Labels' value='true' />
            <format attr='enabled' id='Zip Code Boundaries' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[sum:Calculation_1408219317975777280:qk]' />
              <tooltip column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[sum:StartStationNameOccuranceCount (copy)_1408219317985579012:qk]' />
              <text column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:start station name:nk]' />
              <lod column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:start station name:nk]' />
              <lod column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:end station name:nk]' />
              <lod column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:end station longitude:qk]' />
              <lod column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:end station latitude:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>station name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:start station name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[Start Ride Location Occurances: <[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[sum:Calculation_1408219317975777280:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[End Ride Location Occurances: <[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[sum:StartStationNameOccuranceCount (copy)_1408219317985579012:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:start station latitude:qk]</rows>
        <cols>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:start station longitude:qk]</cols>
      </table>
      <simple-id uuid='{88CDC3B6-F190-400C-A507-0A89BD80BC10}' />
    </worksheet>
    <worksheet name='More Subscribers In Total'>
      <table>
        <view>
          <datasources>
            <datasource caption='202006-citibike-tripdata.csv (Multiple Connections)' name='federated.0gkr55v1ylsdjj1c44l4c0plnp0r' />
          </datasources>
          <datasource-dependencies datasource='federated.0gkr55v1ylsdjj1c44l4c0plnp0r'>
            <_.fcp.ObjectModelTableType.true...column caption='201901-citibike-tripdata.csv+' datatype='table' name='[__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]' pivot='key' type='quantitative' />
            <column-instance column='[stoptime]' derivation='MY' name='[my:stoptime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[usertype]' derivation='None' name='[none:usertype:nk]' pivot='key' type='nominal' />
            <column datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
            <column-instance column='[stoptime]' derivation='Month-Trunc' name='[tmn:stoptime:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[usertype]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Customer&quot;' value='Short Term' />
              </aliases>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='201901-citibike-tripdata.csv+' datatype='integer' name='[__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:stoptime:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[my:stoptime:ok]' member='202001' />
              <groupfilter function='member' level='[my:stoptime:ok]' member='202002' />
              <groupfilter function='member' level='[my:stoptime:ok]' member='202003' />
              <groupfilter function='member' level='[my:stoptime:ok]' member='202004' />
              <groupfilter function='member' level='[my:stoptime:ok]' member='202005' />
              <groupfilter function='member' level='[my:stoptime:ok]' member='202006' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:stoptime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[tmn:stoptime:qk]' scope='cols' value='Ridership Month' />
            <format attr='title' class='0' field='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]' scope='rows' value='Number of Rides Per Month' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:usertype:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[tmn:stoptime:qk]' enable-instant-analytics='true' formula='min' id='refline0' label-type='automatic' scope='per-pane' value-column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[tmn:stoptime:qk]' z-order='1' />
            <reference-line axis-column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]</rows>
        <cols>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[tmn:stoptime:qk]</cols>
      </table>
      <simple-id uuid='{7A3EF9CA-C2DC-4D05-84EF-789F915C75F2}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='202006-citibike-tripdata.csv (Multiple Connections)' name='federated.0gkr55v1ylsdjj1c44l4c0plnp0r' />
          </datasources>
          <datasource-dependencies datasource='federated.0gkr55v1ylsdjj1c44l4c0plnp0r'>
            <column caption='StartStationNameOccuranceCount' datatype='integer' name='[Calculation_1408219317975777280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [start station name] : SUM(1) }' />
            </column>
            <column-instance column='[starttime]' derivation='MY' name='[my:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1408219317975777280]' derivation='Sum' name='[sum:Calculation_1408219317975777280:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:starttime:ok]'>
            <groupfilter function='member' level='[my:starttime:ok]' member='202006' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:start station name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:start station name:nk]</rows>
        <cols>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[sum:Calculation_1408219317975777280:qk]</cols>
      </table>
      <simple-id uuid='{80E6A017-64D8-4631-8165-166723E8714C}' />
    </worksheet>
    <worksheet name='Short-Term Users as a Percentage Has Grown'>
      <table>
        <view>
          <datasources>
            <datasource caption='202006-citibike-tripdata.csv (Multiple Connections)' name='federated.0gkr55v1ylsdjj1c44l4c0plnp0r' />
          </datasources>
          <datasource-dependencies datasource='federated.0gkr55v1ylsdjj1c44l4c0plnp0r'>
            <column caption='Subscriber Count' datatype='integer' name='[Calculation_690739595973722114]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [stoptime], [usertype] : sum(&#13;&#10;if [usertype] = &apos;Subscriber&apos; then 1 else 0 end ) }' />
            </column>
            <column caption='Subscriber Percentage of Ridership' datatype='real' default-format='p0.00%' name='[Calculation_690739595985637380]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_690739595973722114]) / COUNT([__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23])' />
            </column>
            <column caption='Short Term Count' datatype='integer' name='[Subscriber Count (copy)_690739595986915333]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [stoptime], [usertype] : sum(&#13;&#10;if [usertype] = &apos;Customer&apos; then 1 else 0 end ) }' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='201901-citibike-tripdata.csv+' datatype='integer' name='[__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23]' role='measure' type='quantitative' />
            <column caption='Short Term Percentage of Ridership' datatype='real' default-format='p0.00%' name='[Subscriber Percentage of Ridership (copy)_690739595988238342]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Subscriber Count (copy)_690739595986915333]) / COUNT([__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23])' />
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='201901-citibike-tripdata.csv+' datatype='table' name='[__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23]' role='measure' type='quantitative' />
            <column-instance column='[stoptime]' derivation='MY' name='[my:stoptime:ok]' pivot='key' type='ordinal' />
            <column datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
            <column-instance column='[stoptime]' derivation='Month-Trunc' name='[tmn:stoptime:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[usertype]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Customer&quot;' value='Short Term' />
              </aliases>
            </column>
            <column-instance column='[Calculation_690739595985637380]' derivation='User' name='[usr:Calculation_690739595985637380:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Subscriber Percentage of Ridership (copy)_690739595988238342]' derivation='User' name='[usr:Subscriber Percentage of Ridership (copy)_690739595988238342:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:stoptime:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[my:stoptime:ok]' member='202001' />
              <groupfilter function='member' level='[my:stoptime:ok]' member='202002' />
              <groupfilter function='member' level='[my:stoptime:ok]' member='202003' />
              <groupfilter function='member' level='[my:stoptime:ok]' member='202004' />
              <groupfilter function='member' level='[my:stoptime:ok]' member='202005' />
              <groupfilter function='member' level='[my:stoptime:ok]' member='202006' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:stoptime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[usr:Subscriber Percentage of Ridership (copy)_690739595988238342:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[usr:Calculation_690739595985637380:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[usr:Subscriber Percentage of Ridership (copy)_690739595988238342:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[usr:Calculation_690739595985637380:qk] + [federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[usr:Subscriber Percentage of Ridership (copy)_690739595988238342:qk])</rows>
        <cols>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[tmn:stoptime:qk]</cols>
      </table>
      <simple-id uuid='{FC04AD55-87BE-4C1D-8C3F-532FA15105C1}' />
    </worksheet>
    <worksheet name='Total Rides Have Surged Since April (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='202006-citibike-tripdata.csv (Multiple Connections)' name='federated.0gkr55v1ylsdjj1c44l4c0plnp0r' />
          </datasources>
          <datasource-dependencies datasource='federated.0gkr55v1ylsdjj1c44l4c0plnp0r'>
            <_.fcp.ObjectModelTableType.true...column caption='201901-citibike-tripdata.csv+' datatype='table' name='[__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23]' derivation='Count' name='[__tableau_internal_object_id__].[pcdf:cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[stoptime]' derivation='MY' name='[my:stoptime:ok]' pivot='key' type='ordinal' />
            <column datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
            <column-instance column='[stoptime]' derivation='Month-Trunc' name='[tmn:stoptime:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='201901-citibike-tripdata.csv+' datatype='integer' name='[__tableau_internal_object_id__].[Union_AC7368BB656A4EC8933B3CCB592CBE23]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:stoptime:ok]'>
            <groupfilter from='201906' function='range' level='[my:stoptime:ok]' to='202006' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:stoptime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[tmn:stoptime:qk]' scope='cols' value='Ridership Month' />
            <format attr='title' class='0' field='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[pcto:cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]' scope='rows' value='% of Ridership for Month of Total Ridership for Year' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[pcto:cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]' />
              <text column='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[pcdf:cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[__tableau_internal_object_id__].[pcto:cnt:Union_AC7368BB656A4EC8933B3CCB592CBE23:qk]</rows>
        <cols>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[tmn:stoptime:qk]</cols>
      </table>
      <simple-id uuid='{F46C08A8-9358-4AAC-A1F4-D4C905B92589}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='How has the proportion of short-term customers and annual subscribers changed?'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='15' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='11' param='vert' w='82400' x='800' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='11500' id='12' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='86500' id='7' param='vert' w='82400' x='800' y='12500'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='86500' id='5' w='82400' x='800' y='12500'>
                  <zone h='86500' id='13' name='More Subscribers In Total' w='41200' x='42000' y='12500'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='86500' id='17' name='Short-Term Users as a Percentage Has Grown' w='41200' x='800' y='12500'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='14' is-fixed='true' param='vert' w='16000' x='83200' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9000' id='16' name='More Subscribers In Total' pane-specification-id='2' param='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:usertype:nk]' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9000' id='18' name='Short-Term Users as a Percentage Has Grown' pane-specification-id='1' param='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[:Measure Names]' w='16000' x='83200' y='10000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='34' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='33' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='11500' id='12' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='86500' id='17' is-fixed='true' name='Short-Term Users as a Percentage Has Grown' w='41200' x='800' y='12500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9000' id='18' name='Short-Term Users as a Percentage Has Grown' pane-specification-id='1' param='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[:Measure Names]' w='16000' x='83200' y='10000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='86500' id='13' is-fixed='true' name='More Subscribers In Total' w='41200' x='42000' y='12500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9000' id='16' name='More Subscribers In Total' pane-specification-id='2' param='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:usertype:nk]' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A2C4E633-33F8-4054-81C6-8232D535FD7E}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98340' id='1' param='vert' removable='false' w='98426' x='787' y='830'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='4357' id='3' w='98426' x='787' y='830' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98426' x='787' y='5187' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='83506' id='5' paired-zone-id='4' removable='false' w='98426' x='787' y='15664'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{9D299BD0-F459-4B6D-96AF-2F3AF5AA0AD2}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Total Rides Have Surged Since April (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:stoptime:ok]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[yr:stoptime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{21641B35-F195-4C52-9DB8-7A5F28E3C91B}' />
    </window>
    <window class='worksheet' name='Annotated: Total Rids Have Surged Since April'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:stoptime:ok]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[yr:stoptime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1A0F9571-D26D-40BB-BDDF-F2B7B5C2A039}' />
    </window>
    <window class='worksheet' name='More Subscribers In Total'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:usertype:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:stoptime:ok]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:usertype:nk]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[qr:stoptime:ok]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[yr:stoptime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD6AD040-31AC-4412-83E1-923700A3184E}' />
    </window>
    <window class='worksheet' name='Annotate: More Subscribers In Total (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:usertype:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:stoptime:ok]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:usertype:nk]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[qr:stoptime:ok]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[yr:stoptime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{42F47A2E-3716-4F60-BB0D-9CBF0C903665}' />
    </window>
    <window class='worksheet' name='Short-Term Users as a Percentage Has Grown'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='1' param='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[mn:stoptime:ok]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:stoptime:ok]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:Calculation_690739595976392707:qk]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[sum:Calculation_690739595976392707:ok]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[yr:stoptime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED29DF0F-E6BC-4C34-BFB8-8D8370413BB6}' />
    </window>
    <window class='worksheet' name='Annotate: Short-Term Users as a Percentage Has Grown (2)'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='1' param='[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[mn:stoptime:ok]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:stoptime:ok]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:Calculation_690739595976392707:qk]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[sum:Calculation_690739595976392707:ok]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[yr:stoptime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F764F1B9-EB87-4EB3-9AA9-14AA5635F66A}' />
    </window>
    <window class='dashboard' name='How has the proportion of short-term customers and annual subscribers changed?'>
      <viewpoints>
        <viewpoint name='More Subscribers In Total'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:usertype:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Short-Term Users as a Percentage Has Grown'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{40B9CAD2-E220-4551-BE67-291DC3883AC5}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{F0C03885-BBF4-4B7E-A92D-EC5E5E73EB7E}' />
    </window>
    <window class='worksheet' maximized='true' name='City Map'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:starttime:ok]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:end station latitude:qk]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:end station longitude:qk]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:end station name:nk]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:start station latitude:qk]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:start station longitude:qk]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{B9430010-77DE-4DFC-96EE-5786F2BAEDFC}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='105'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[max:Calculation_1408219317981032450:qk]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[my:starttime:ok]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:end station name:nk]</field>
            <field>[federated.0gkr55v1ylsdjj1c44l4c0plnp0r].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE7AE579-791B-4697-8795-4D4EEB582927}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Annotate: More Subscribers In Total (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Annotate: Short-Term Users as a Percentage Has Grown (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Annotated: Total Rids Have Surged Since April' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='City Map' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='How has the proportion of short-term customers and annual subscribers changed?' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='More Subscribers In Total' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
      et4yuwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Short-Term Users as a Percentage Has Grown' width='192'>
      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
      y9eQZgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Rides Have Surged Since April (2)' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
